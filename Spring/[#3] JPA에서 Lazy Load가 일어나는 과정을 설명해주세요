일반적인 Lazy Loading이 의미하는 바와 유사하게 JPA에서 Lazy Loading은 일반적으로 해당 부분이 필요한 시점에 데이터를 불러온다는 의미로 쓰입니다.

Lazy Loadin이 일어나는 순서는 다음과 같습니다
1. 내부가 비어있고, 실제 객체의 값에 접근할 수 있는 객체가 영속성 컨텍스트에 등록이 됨
2. 해당 값이 필요할 때 쿼리를 통해 실제 값을 가져옴

JPA에서의 Lazy Loading을 이해하기 위해서는 프록시 패턴에 대한 이해가 필요합니다. 프록시 패턴은 실제 객체를 가리킬 수 있는 객체를 두고 특정 로직이 수행되었을 때 실제 객체에서 필요한 로직을 수행하도록 하는 패턴을 의미합니다. 스프링에서는 데이터베이스와 매핑되는 객체들을 위 패턴을 통해 관리하는데, 그렇기 때문에 Lazy Loading을 적용했을 때 객체를 생성하더라도 데이터베이스로 바로 쿼리가 날아가지 않는 것입니다.

반대되는 의미로는 Eager Loading이 있습니다. 필요한 값들을 엔티티가 영속성 컨텍스트에 등록되는 즉시 바로 불러오는 방식인데, 이는 객체와 연관된 테이블이 여러개 있을 경우 성능의 저하를 불러올 수 있습니다. 